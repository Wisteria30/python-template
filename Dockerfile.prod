#==================================================
# Build Layer
FROM python:3.11.2-bullseye AS builder

# global settings
WORKDIR /app
ENV LANG=C.UTF-8

# application setings
# Makefileのコマンドをハンドリングする
ENV IN_CONTAINER true
ENV PYTHONIOENCODING "utf-8"
# ENV PYTHONUNBUFFERED 1

RUN apt update -y && apt upgrade -y \
  && apt-get install --no-install-recommends -y build-essential curl libgeos-dev iputils-ping dnsutils \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# install poetry
ENV POETRY_HOME=/etc/poetry
ENV PATH="${POETRY_HOME}/bin:${PATH}"
ENV POETRY_VERSION=1.4.2
ENV POETRY_VIRTUALENVS_CREATE=false
ENV POETRY_NO_INTERACTION=1
RUN curl -sSL https://install.python-poetry.org | python3 -
# 依存関係のインストール
COPY pyproject.toml poetry.lock* ./
RUN poetry install --no-root
# 本体のインストール
COPY . /app
RUN poetry install --only-root && rm -rf ~/.cache

#==================================================
# Production Layer
FROM python:3.11.2-slim as production
WORKDIR /app

# Copy Python dependencies
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages

# Copy Rust dependencies
COPY --from=builder /root/.cargo /root/.cargo

# Copy other essential binaries and libraries
COPY --from=builder /usr/bin/make /usr/bin/make
COPY --from=builder /bin/ping /bin/ping
COPY --from=builder /lib/x86_64-linux-gnu /lib/x86_64-linux-gnu
COPY --from=builder /usr/bin/nslookup /usr/bin/nslookup
COPY --from=builder /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /app /app

CMD ["make", "run"]
