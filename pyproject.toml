[tool.poetry]
name = "python_template"
version = "0.1.0"
description = ""
authors = ["Wisteria30 <skymars0327@yahoo.co.jp>"]
readme = "README.md"
packages = [{include = "python_template", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
numpy = "^1.24.2"
requests = "^2.28.2"
openai = "^1.1.0"
fastapi = "^0.95.0"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
pydantic = {extras = ["dotenv"], version = "^1.10.7"}
dependency-injector = "^4.41.0"
python-dotenv = "^1.0.0"
gunicorn = "^20.1.0"
httpx = "^0.24.1"
fire = "^0.5.0"
tiktoken = "^0.4.0"
tenacity = "^8.2.2"
schedule = "^1.2.0"
google-generativeai = "^0.2.0"
google-cloud-aiplatform = "^1.33.1"
llama-index = "0.8.63.post2"
pgvector = "^0.2.3"
psycopg2-binary = "^2.9.9"
asyncpg = "^0.28.0"
ginza = "^5.1.3"
ja-ginza = "^5.1.3"
alembic = "^1.12.0"
tqdm = "^4.66.1"
pyvis = "^0.3.2"
neo4j = "^5.13.0"
unidic = "1.1.0"
fugashi = {extras = ["unidic"], version = "^1.3.0"}
llama-hub = "^0.0.41"
weaviate-client = ">=3.0.0,<4.0.0"
wandb = "^0.15.12"
ipython = "8.16.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
matplotlib = "^3.7.1"
jupyter = "^1.0.0"
types-requests = "^2.28.11.17"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.3.1"
mypy = "^1.6.1"
pytest = "^7.4.3"
black = {extras = ["d","jupyter"], version = "^23.11.0"}
ruff = "^0.1.4"

[tool.poetry.scripts]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "B", # flake8-bugbear
  "I", # isort
  "C", # mccabe
]
ignore = [
  "E203", # black treats : as a binary operator
  "E231", # black doesn't put a space after
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.isort]
split-on-trailing-comma = true
force-wrap-aliases = true
combine-as-imports = true
lines-between-types = 1


[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = 3.11
strict = true
mypy_path = ["src"]
# error control
show_column_numbers = true
show_error_context = true
# import handling
follow_imports = "normal"
ignore_missing_imports = true
namespace_packages = true
# etc
check_untyped_defs = true
disallow_any_decorated = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = false
ignore_errors = false
no_implicit_optional = true
show_error_codes = true
strict_equality = true
strict_optional = true
# warn
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = false
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
# parametrizeの並列実行を有効にする
addopts = "--tb=short -n auto"
filterwarnings = [
  "ignore::DeprecationWarning"
]
# 結果を日本語で見れるようにする
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
